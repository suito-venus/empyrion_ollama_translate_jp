#!/usr/bin/env python3
"""
XSS脆弱性のテスト
"""
import html
import sys
sys.path.append('..')

def test_xss_vulnerability():
    """XSS攻撃のテストケース"""
    
    # 危険なHTML入力例
    malicious_inputs = [
        "Normal text",
        "<script>alert('XSS')</script>",
        "<img src=x onerror=alert('XSS')>",
        "<svg onload=alert('XSS')>",
        "javascript:alert('XSS')",
        "<iframe src=javascript:alert('XSS')></iframe>",
        "Text with <b>bold</b> tags",
        "<style>body{background:red}</style>",
        "Text & symbols < > \" '",
    ]
    
    print("=== XSS脆弱性テスト ===")
    
    for input_text in malicious_inputs:
        print(f"\n入力: {input_text}")
        
        # 脆弱なHTML出力
        print("脆弱なHTML:")
        vulnerable_html = f"<div>{input_text}</div>"
        print(f"  {vulnerable_html}")
        
        # 安全なHTML出力
        print("安全なHTML:")
        safe_html = f"<div>{html.escape(input_text)}</div>"
        print(f"  {safe_html}")

def test_html_preview_safety():
    """HTMLプレビューの安全性テスト"""
    
    print("\n=== HTMLプレビュー安全性テスト ===")
    
    # text_preview.pyの処理を模擬
    def parse_game_text_vulnerable(text):
        """脆弱なテキスト解析（現在の実装）"""
        # HTMLエスケープなしで直接出力
        return text
    
    def parse_game_text_safe(text):
        """安全なテキスト解析"""
        # HTMLエスケープしてから処理
        escaped = html.escape(text)
        return escaped
    
    test_cases = [
        "Normal game text",
        "[c][FF0000]Red text[-][/c]",
        "<script>alert('XSS')</script>",
        "[b]Bold text[/b] with <script>alert('XSS')</script>",
        "Text with & < > \" ' characters"
    ]
    
    for text in test_cases:
        print(f"\n入力: {text}")
        
        vulnerable = parse_game_text_vulnerable(text)
        safe = parse_game_text_safe(text)
        
        print(f"脆弱: {vulnerable}")
        print(f"安全: {safe}")

def generate_test_html():
    """テスト用HTMLファイルを生成"""
    
    print("\n=== テスト用HTMLファイル生成 ===")
    
    malicious_content = """
    <script>alert('XSS Attack!')</script>
    <img src=x onerror=alert('Image XSS')>
    Normal text with [c][FF0000]color tags[-][/c]
    """
    
    # 脆弱なHTML
    vulnerable_html = f"""
    <!DOCTYPE html>
    <html>
    <head><title>Vulnerable Test</title></head>
    <body>
        <h1>脆弱なHTMLプレビュー</h1>
        <div>{malicious_content}</div>
    </body>
    </html>
    """
    
    # 安全なHTML
    safe_html = f"""
    <!DOCTYPE html>
    <html>
    <head><title>Safe Test</title></head>
    <body>
        <h1>安全なHTMLプレビュー</h1>
        <div>{html.escape(malicious_content)}</div>
    </body>
    </html>
    """
    
    with open("test/vulnerable_preview.html", "w", encoding="utf-8") as f:
        f.write(vulnerable_html)
    
    with open("test/safe_preview.html", "w", encoding="utf-8") as f:
        f.write(safe_html)
    
    print("テストHTMLファイルを生成しました:")
    print("  - test/vulnerable_preview.html (脆弱)")
    print("  - test/safe_preview.html (安全)")

if __name__ == "__main__":
    test_xss_vulnerability()
    test_html_preview_safety()
    generate_test_html()